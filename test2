globals [
         electricity-price
         oil-price
         co2-storage-price
         co2-emission-price
         current-capture-technology-price
         current-capture-technology-capacity
        ]

breed [industries industry]
breed [storage-points storage-point]
directed-link-breed [pipelines pipeline]

industries-own [
                payback-period
                storage-costs
                emission-costs
                energy-costs      ;; Electricity or oil
                capture-technology-capacity
                capture-technology-price
                distance-storage-point
               ]

storage-points-own [capacity]

pipelines-own [
               pipeline-distance
               max-capacity
             ]

to setup
  clear-all
  ask patches [set pcolor green]
  ask patches with [pycor <= max-pycor and pycor >= 5]
    [ set pcolor blue ]
  set-default-shape industries "factory"
  create-industries initial-number-factories
  [
    set color white
    set size 0.5
    setxy random-xcor random-ycor
  ]
  set-default-shape storage-points "chess rook"
  createe-storagepoints 2 5
  createe-storagepoints 5 8
  createe-storagepoints 3 7
  set current-capture-technology-price initial-capture-technology-price
  set current-capture-technology-capacity initial-capture-technology-capacity
  reset-ticks
end

to createe-storagepoints [ x y ]
  ask patches with [ pycor = y and pxcor = x ]
    [sprout-storage-points 1]
end

to go
  if ticks > 500
    [ stop ]
  capture-technology-development
  if ticks = 10
    [ build-pipelines ]
  tick
end

to build-pipelines
  ask industries [ create-pipeline-to min-one-of storage-points [ distance myself ] ]
end

to capture-technology-development
  if ticks != 0 and remainder ticks 12 = 0
    [
      set current-capture-technology-price current-capture-technology-price * 0.9
      set current-capture-technology-capacity current-capture-technology-capacity * 1.1
    ]
end
